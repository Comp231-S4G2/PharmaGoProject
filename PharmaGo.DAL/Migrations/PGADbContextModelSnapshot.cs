// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmaGo.DAL;

namespace PharmaGo.DAL.Migrations
{
    [DbContext(typeof(PGADbContext))]
    partial class PGADbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PharmaGo.BOL.Appointment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApptTime");

                    b.Property<string>("CustomerId");

                    b.Property<long>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StoreId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("PharmaGo.BOL.GPAUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("ConfirmPassword");

                    b.Property<string>("Contact");

                    b.Property<string>("EmailId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<long?>("PharmaId");

                    b.HasKey("Id");

                    b.ToTable("GPAUsers");
                });

            modelBuilder.Entity("PharmaGo.BOL.Medicine", b =>
                {
                    b.Property<long>("MedicineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("MedicineId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("PharmaGo.BOL.Pharmacy", b =>
                {
                    b.Property<long>("PharmacyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("AsstPharmacistId");

                    b.Property<string>("Contact");

                    b.Property<string>("EmailId");

                    b.Property<string>("Name");

                    b.Property<string>("PharmacistId");

                    b.HasKey("PharmacyId");

                    b.HasIndex("AsstPharmacistId");

                    b.HasIndex("PharmacistId");

                    b.ToTable("Pharmacies");
                });

            modelBuilder.Entity("PharmaGo.BOL.StockMedicine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MedicineId");

                    b.Property<long?>("PharmacyId");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("PharmacyId");

                    b.ToTable("StockMedicines");
                });

            modelBuilder.Entity("PharmaGo.BOL.Appointment", b =>
                {
                    b.HasOne("PharmaGo.BOL.GPAUser", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("PharmaGo.BOL.Pharmacy", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PharmaGo.BOL.Pharmacy", b =>
                {
                    b.HasOne("PharmaGo.BOL.GPAUser", "AsstPharmacist")
                        .WithMany()
                        .HasForeignKey("AsstPharmacistId");

                    b.HasOne("PharmaGo.BOL.GPAUser", "Pharmacist")
                        .WithMany()
                        .HasForeignKey("PharmacistId");
                });

            modelBuilder.Entity("PharmaGo.BOL.StockMedicine", b =>
                {
                    b.HasOne("PharmaGo.BOL.Medicine", "Medicine")
                        .WithMany()
                        .HasForeignKey("MedicineId");

                    b.HasOne("PharmaGo.BOL.Pharmacy")
                        .WithMany("MedStores")
                        .HasForeignKey("PharmacyId");
                });
#pragma warning restore 612, 618
        }
    }
}
